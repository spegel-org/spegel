apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "spegel.fullname" . }}
  namespace: {{ include "spegel.namespace" . }}
  labels:
    {{- include "spegel.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "spegel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spegel.selectorLabels" . | nindent 8 }}
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spegel.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- if .Values.spegel.containerdMirrorAdd }}
      initContainers:
      - name: configuration
        image: "{{ include "spegel.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        args:
          - configuration
          - --log-level={{ .Values.spegel.logLevel }}
          - --containerd-registry-config-path={{ .Values.spegel.containerdRegistryConfigPath }}
          {{- with .Values.spegel.registries }}
          - --registries
          {{- range . }}
          - {{ . | quote }}
          {{- end }}
          {{- end }}
          - --mirror-registries
          - http://$(NODE_IP):{{ .Values.service.registry.hostPort }}
          - http://$(NODE_IP):{{ .Values.service.registry.nodePort }}
          {{- with .Values.spegel.additionalMirrorRegistries }}
          {{- range . }}
          - {{ . | quote }}
          {{- end }}
          {{- end }}
          - --resolve-tags={{ .Values.spegel.resolveTags }}
          - --append-mirrors={{ .Values.spegel.appendMirrors }}
        env:
        - name: NODE_IP
        {{- include "networking.nodeIp" . | nindent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
          - name: containerd-config
            mountPath: {{ .Values.spegel.containerdRegistryConfigPath }}
      {{- end }}
      containers:
      - name: registry
        image: "{{ include "spegel.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        args:
          - registry
          - --log-level={{ .Values.spegel.logLevel }}
          - --mirror-resolve-retries={{ .Values.spegel.mirrorResolveRetries }}
          - --mirror-resolve-timeout={{ .Values.spegel.mirrorResolveTimeout }}
          - --registry-addr=:{{ .Values.service.registry.port }}
          - --router-addr=:{{ .Values.service.router.port }}
          - --metrics-addr=:{{ .Values.service.metrics.port }}
          {{- with .Values.spegel.registries }}
          - --registries
          {{- range . }}
          - {{ . | quote }}
          {{- end }}
          {{- end }}
          - --containerd-sock={{ .Values.spegel.containerdSock }}
          - --containerd-namespace={{ .Values.spegel.containerdNamespace }}
          - --containerd-registry-config-path={{ .Values.spegel.containerdRegistryConfigPath }}
          - --bootstrap-kind=dns
          - --dns-bootstrap-domain={{ include "spegel.fullname" . }}-bootstrap.{{ include "spegel.namespace" . }}.svc.{{ .Values.clusterDomain }}
          - --resolve-latest-tag={{ .Values.spegel.resolveLatestTag }}
          - --local-addr=$(NODE_IP):{{ .Values.service.registry.hostPort }}
          {{- with .Values.spegel.containerdContentPath }}
          - --containerd-content-path={{ . }}
          {{- end }}
          - --not-ready-taint-remove={{ .Values.spegel.notReadyTaint.removeWhenReady }}
          - --not-ready-taint-key={{ .Values.spegel.notReadyTaint.key }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NODE_IP
        {{- include "networking.nodeIp" . | nindent 10 }}
        ports:
          - name: registry
            containerPort: {{ .Values.service.registry.port }}
            hostPort: {{ .Values.service.registry.hostPort }}
            protocol: TCP
          - name: router
            containerPort: {{ .Values.service.router.port }}
            protocol: TCP
          - name: metrics
            containerPort: {{ .Values.service.metrics.port }}
            protocol: TCP
        # Startup may take a bit longer on bootsrap as Pods need to find each other.
        # This is why the startup proben is a bit more forgiving, while hitting the endpoint more often.
        startupProbe:
          periodSeconds: 3
          failureThreshold: 60
          httpGet:
            path: /healthz
            port: registry
        readinessProbe:
          httpGet:
            path: /healthz
            port: registry
        volumeMounts:
          - name: containerd-sock
            mountPath: {{ .Values.spegel.containerdSock }}
          {{- with .Values.spegel.containerdContentPath }}
          - name: containerd-content
            mountPath: {{ . }}
            readOnly: true
          {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      volumes:
        - name: containerd-sock
          hostPath:
            path: {{ .Values.spegel.containerdSock }}
            type: Socket
        {{- with .Values.spegel.containerdContentPath }}
        - name: containerd-content
          hostPath:
            path: {{ . }}
            type: Directory
        {{- end }}
        {{- if .Values.spegel.containerdMirrorAdd }}
        - name: containerd-config
          hostPath:
            path: {{ .Values.spegel.containerdRegistryConfigPath }}
            type: DirectoryOrCreate
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
